// -*- C++ -*-

/**

@page TN002 TN002 - Technical Note 002: CreateWindow and DestroyWindow

@image html CreateDestroyWindows.png

<h2>Where are created HWNDs?</h2>

All HWNDs are created inside
@ref Vaca::Widget#createHWND "Widget::createHWND"
method using the Win32 API routine @c CreateWindowEx. But this
method is privated, you can't call it (although you can
override it), the only one that calls this method is
@ref Vaca::Widget#create "Widget::create". Its main task
is to setup the @a m_HWND member of @ref Vaca::Widget "Widget"
instances and to do the classic Win32 subclassing (setting the
GWL_WNDPROC property):
@code
baseWndProc = (WNDPROC)
  SetWindowLongPtr(m_HWND,
		   GWLP_WNDPROC,
		   (LONG_PTR) getGlobalWndProc());
@endcode
See @ref Vaca::Widget#subClass() "Widget::subClass()" for more information.

<h2>HWND life time</h2>

All windows/HWNDs have the same life time that its container
Widget. That is if we create a button:
@code
  Frame frame(...)
  {
    Button myButton("OK", frame); // the HWND is created
    ...
  }
  // here myButton (and its HWND) doesn't exist
@endcode

<h2>You can override createHWND</h2>

This shouldn't be your case, but if you want to make something like
Vaca::MdiClient#createHWND, it is, to make your customized
CreateWindowEx call, you can override @c createHWND, but remember that
you must to call @ref Vaca::Widget#create "create" inside the constructor of
your own class, and give @a className=NULL to @ref Vaca::Widget#Widget "Widget()".
This is a little example:
@code
class MySuperDuperWidget : public Widget
{
public:

  MySuperDuperWidget(Widget *parent) 
    : Widget(NULL, parent, NoStyle)
  {
    create(_T("MySuperDuperWidget"), parent, ChildStyle);
  }

protected:

  virtual HWND createHWND(LPCTSTR className,
                          Widget *parent,
                          Style style)
  {
    return CreateWindowEx(style.extended,
			  className,
			  _T(""),
			  style.regular,
			  CW_USEDEFAULT,
			  CW_USEDEFAULT,
			  CW_USEDEFAULT,
			  CW_USEDEFAULT,
			  parent ? parent->getHWND(): (HWND)NULL,
			  (HMENU)NULL,
			  Application::getHINSTANCE(),
			  reinterpret_cast<LPVOID>(this));
  }
};
@endcode

@see @ref TN001, Vaca::Widget#Widget, Vaca::Widget#~Widget.

*/
