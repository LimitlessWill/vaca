----------------------------------------------------------------------
General
----------------------------------------------------------------------

- Look at 'TODO' in source code


----------------------------------------------------------------------
Layout Managers
----------------------------------------------------------------------

- Xul (like Bix but more general).


----------------------------------------------------------------------
Widgets
----------------------------------------------------------------------

- ReBar
- DataGrid (the DataGrids example is a good start)
- ScrollBar?
- FlatScrollBar?
- Header?
- MessageBox? (you can use Widget::msgBox at the moment)
- PageSetupDialog
- RichEdit?


----------------------------------------------------------------------
Examples
----------------------------------------------------------------------

- BouncingBall (fix resize wait, and fix timer break)
- FontMetrics (finish it)
- PensBrushes (finish Brushes stuff)
- DataGrids (complete)
- Sudoku (double-buffered, with better hot-tracking, better cell
  handle, and fix the "infinite-loop" bug in the level generator)
- Remove CommandsAlt, LikeDOS, ThreadKiller
- Finish Xuls


----------------------------------------------------------------------
API
----------------------------------------------------------------------

- Accelerators <-> Commands

- DL_BEGINDRAG, DL_CANCELDRAG, DL_DRAGGING, DL_DROPPED

- document why getOrientation() and setOrientation() don't exist for
  Spinner (it's because the UDS_HORZ style can't be changed after up-down
  control is created).

- complete:
      onBeforePosChange();
      onAfterPosChange();

- check the WM_WINDOWPOSCHANGING message.

- methods to use: EnableScrollBar

- All HTHEME stuff (add "Theme" class).
  + IsAppThemed

- Add support for FlashWindowEx.

- See what to do with the Command class.

- Remember the WM_MENUSELECT message for status-bars.

- add support for DrawFrameControl, DrawState, DrawEdge
  as
    Graphics::drawControl
    Graphics::drawState
    Graphics::drawEdge

- mouseHover should be? (there is already some code)

- "Application::instance" or "Application::getInstance"?

- a "MVC: Model View Controller" pattern (also known as Observer pattern).

- Graphics::widenPath()

- finish GraphicsPath class
